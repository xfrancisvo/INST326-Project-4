class Product:
    # base class for products in the store
    def __init__(self, product_id, name, price, category):
        self.product_id = product_id
        self.name = name
        self._price = price  # keeps the price private to control changes
        self.category = category

    @property
    def price(self):
        return self._price

    def get_discount(self):
        return 0  # base products have no discount

class Candy(Product):
    # subclass for candies with a bulk discount
    def get_bulk_discount(self, quantity):
        # 20% discount for 10 or more candies
        if quantity >= 10:
            return 0.20
        return 0

class ShoppingCart:
    # class to manage shopping cart operations
    def __init__(self):
        self.contents = {}  # stores product details with quantities

    def add_product(self, product, quantity=1):
        # adds products to the cart
        # checks if quantity is positive
        if quantity <= 0:
            print("Quantity must be positive")
            return
        if product.product_id in self.contents:
            self.contents[product.product_id]['quantity'] += quantity
            print(f"You now have {self.contents[product.product_id]['quantity']} of {product.name}.")
        else:
            self.contents[product.product_id] = {
                'product': product,
                'quantity': quantity
            }
            print(f"Added {quantity} of {product.name} to the cart.")

    def edit_cart(self, product, quantity):
        # modifies the quantity of products in the cart
        if product.product_id in self.contents:
            new_quantity = self.contents[product.product_id]['quantity'] + quantity
            if new_quantity > 0:
                self.contents[product.product_id]['quantity'] = new_quantity
                print(f"You now have {new_quantity} of {product.name}.")
            else:
                del self.contents[product.product_id]
                print(f"Removed all of {product.name} from the cart.")
        else:
            print(f"{product.name} is not in the cart.")

    def calculate_total(self):
        # calculates the total cost of the cart, including discounts
        total = 0
        for item in self.contents.values():
            product = item['product']
            quantity = item['quantity']
            discount = 0
            if isinstance(product, Candy):
                discount = product.price * product.get_bulk_discount(quantity)
            total += (product.price - discount) * quantity
        return total

    def calculate_tax(self):
        # calculates tax at a fixed rate of 6%
        return self.calculate_total() * 0.06

    def print_receipt(self):
        # prints the receipt with item details, discounts, subtotal, and total
        print("\n=-=-= Receipt =-=-=")
        for item in self.contents.values():
            product = item['product']
            quantity = item['quantity']
            discount = 0
            if isinstance(product, Candy):
                discount = product.price * product.get_bulk_discount(quantity)
            subtotal = (product.price - discount) * quantity  # applies bulk discount if applicable
            print(f"{product.name} (x{quantity}) - ${subtotal}")
        subtotal = self.calculate_total()
        tax = self.calculate_tax()
        print(f"Subtotal: ${subtotal}")
        print(f"Sales tax (6%): ${tax}")
        print(f"Total: ${subtotal + tax}")
        print("=-=-=-=-=-=-=-=-=-=")

class Order:
    # class to handle order processing and checkout
    def __init__(self, cart):
        self.cart = cart  # assigns the shopping cart to the order

    def checkout(self):# prints the receipt and confirms the order
        print("Now processing order...")
        self.cart.print_receipt()
        confirm = input("Do you want to complete your purchase? (yes/no): ").strip().lower()
        if confirm == "yes":
            payment = input("Enter 'purchase' to confirm payment: ").strip().lower()
            if payment == "purchase":
                self.cart.contents.clear()  # clears the cart after user confirms
                print("Thank you for your purchase!")
            else:
                print("Purchase not completed. Your order has been canceled.")
        else:
            print("Your order has been canceled.")

def menu():
    # main function displays the menu and allows user interaction
    cart = ShoppingCart()
    products = {
        1: Candy(product_id=1, name="Sour Patch Kids", price=3.00, category="Candy"),
        2: Candy(product_id=2, name="Hersheys Chocolate", price=2.50, category="Candy"),
        3: Candy(product_id=3, name="Skittles", price=2.00, category="Candy"),
        4: Candy(product_id=4, name="Nerds", price=1.25, category="Candy"),
        5: Candy(product_id=5, name="M&M's", price=1.75, category="Candy")
    }

    while True:
        # displays the main menu options
        print("\nWelcome to TERP's Candy Store!")
        print("1. View Candies")
        print("2. Add Candies to Cart")
        print("3. Edit Cart")
        print("4. View Cart")
        print("5. Checkout")
        print("6. Exit")

        choice = input("Choose an option: ").strip()

        if choice == "1":
            # displays all the available products
            print("\nAvailable Candies:")
            for key, product in products.items():
                print(f"{key}. {product.name} - ${product.price}")

        elif choice == "2":
            # allows user to add candies to the cart
            try:
                product_id = int(input("Enter the product number to add: ").strip())
                if product_id in products:
                    quantity = int(input("Enter the quantity to add: ").strip())
                    cart.add_product(products[product_id], quantity)
                else:
                    print("Invalid product number.")
            except ValueError:
                print("Please enter valid numbers.")

        elif choice == "3":
            # allows user to edit the cart
            try:
                product_id = int(input("Enter the product number to edit: ").strip())
                if product_id in products:
                    quantity = int(input("Enter the quantity (positive to add, negative to remove): ").strip())
                    cart.edit_cart(products[product_id], quantity)
                else:
                    print("Invalid product number.")
            except ValueError:
                print("Please enter valid numbers.")

        elif choice == "4":
            # display the current cart contents
            print("\nYour Cart:")
            cart.print_receipt()

        elif choice == "5":
            # goes to checkout
            order = Order(cart)
            order.checkout()
            break

        elif choice == "6":
            # exits the program
            print("Thank you for visiting TERP's Candy Store. Goodbye!")
            break

        else:
            # handles invalid choice menu
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    menu()
